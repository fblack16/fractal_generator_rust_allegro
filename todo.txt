Next steps:
- Maybe provide a struct Language that encapsulates an alphabet, a dictionary

- Think again about the apply_replacement_rules function in word. This currently works just fine for Lindenmayer systems.
    I also like the idea of treating words of functions similarly, but iteration for such words is usually given by
    just appending the same function again at the end of the word. This is currently not possible with the current implementation.

New stuff:

With the new dictionary structure, it is important that every valid word over the Language
is listed in the dictionary, otherwise, the functions on word will not deliver the expected results.

Maybe we should implement checks for consistency of words and the dictionary. On the other hand, the dictionary is user defined.
But it is probably hard to check for consistency: we would need to check that a given word is only a sequence of valid words.

Look again if we can provide a Debug implementation for Dictionaries, i.e. how to implement Debug manually on fn(&[L], &P)
